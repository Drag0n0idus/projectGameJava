/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package people;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import javax.swing.DefaultListModel;

/**
 *
 * @author student
 */
public class Window extends javax.swing.JFrame {

    DefaultListModel model = new DefaultListModel();

    /**
     * Creates new form Window
     */
    public Window() {
        initComponents();
        peopleList.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PopupMenu = new javax.swing.JPopupMenu();
        removeMenuItem = new javax.swing.JMenuItem();
        removeAllMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenuItem();
        openFileMenu = new javax.swing.JMenuItem();
        saveFileMenu = new javax.swing.JMenuItem();
        nameTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        peopleList = new javax.swing.JList<>();
        ChoiceBox = new javax.swing.JComboBox<>();

        removeMenuItem.setText("Odstranit");
        removeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeMenuItemActionPerformed(evt);
            }
        });
        PopupMenu.add(removeMenuItem);

        removeAllMenuItem.setText("Odstranit vše");
        removeAllMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeAllMenuItemActionPerformed(evt);
            }
        });
        PopupMenu.add(removeAllMenuItem);

        editMenu.setText("Editovat");
        editMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editMenuActionPerformed(evt);
            }
        });
        PopupMenu.add(editMenu);

        openFileMenu.setText("Načíst ze souboru");
        openFileMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFileMenuActionPerformed(evt);
            }
        });
        PopupMenu.add(openFileMenu);

        saveFileMenu.setText("Uložit do souboru");
        saveFileMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveFileMenuActionPerformed(evt);
            }
        });
        PopupMenu.add(saveFileMenu);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        nameTextField.setToolTipText("Zadej jméno");
        nameTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nameTextFieldKeyPressed(evt);
            }
        });

        jLabel1.setText("Jméno osoby");

        addButton.setText("Přidat osobu");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        jScrollPane1.setComponentPopupMenu(PopupMenu);

        peopleList.setComponentPopupMenu(PopupMenu);
        jScrollPane1.setViewportView(peopleList);

        ChoiceBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Human", "Sportsman", "TennisPlayer" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                            .addComponent(nameTextField))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ChoiceBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(37, 37, 37))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ChoiceBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addButton))
                .addContainerGap(55, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        if (ChoiceBox.getSelectedItem() == "Human") {
            model.addElement(new Human(nameTextField.getText()));
        } else if (ChoiceBox.getSelectedItem() == "Sportsman") {
            model.addElement(new Sportsman(nameTextField.getText()));
        } else {
            model.addElement(new TennisPlayer(nameTextField.getText()));
        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void nameTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameTextFieldKeyPressed
        // TODO dd your handling code here:
    }//GEN-LAST:event_nameTextFieldKeyPressed

    private void removeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeMenuItemActionPerformed
        int selectedIndex = peopleList.getSelectedIndex();
        if (selectedIndex != -1) {
            model.remove(selectedIndex);
        }
    }//GEN-LAST:event_removeMenuItemActionPerformed

    private void removeAllMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeAllMenuItemActionPerformed
        model.removeAllElements();
    }//GEN-LAST:event_removeAllMenuItemActionPerformed

    private void editMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editMenuActionPerformed
        if (peopleList.getSelectedIndex() > -1) {
            Human person = (Human) model.get(peopleList.getSelectedIndex());
            PersonDialog dialog = new PersonDialog(this, true, person);
            if (dialog.showDialog().equalsIgnoreCase("OK")) {
                model.setElementAt(dialog.getPerson(), peopleList.getSelectedIndex());
            }
        }
    }//GEN-LAST:event_editMenuActionPerformed

    private void saveFileMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveFileMenuActionPerformed
        try (BufferedWriter bw = new BufferedWriter(new FileWriter("soubor.csv"))) {
            bw.write("class;name;age;height;weight;sex");
            bw.newLine();
            for (int i = 0; i < model.getSize(); i++) {
                Human person = (Human) model.get(i);
                String pokus = person.getClass().getSimpleName();
                String output = pokus + ";"
                        + person.getName() + ";"
                        + person.getAge() + ";"
                        + person.getHeight() + ";"
                        + person.getWeight() + ";"
                        + person.getSex();
                bw.write(output);
                if (i < model.getSize() - 1) {
                    bw.newLine();
                }
            }
            bw.flush();
        } catch (Exception e) {
            System.err.println("Do souboru se nepovedlo zapsat.");
        }
    }//GEN-LAST:event_saveFileMenuActionPerformed

    private void openFileMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFileMenuActionPerformed
        try (BufferedReader br = new BufferedReader(new FileReader("soubor.csv"))) {
            String s;
            int i = 0;
            while ((s = br.readLine()) != null) {
                if(i > 0){
                    String[] attr = s.split(";");     
                    Human person = new Human(attr[1]); 
                    person.setAge(Integer.parseInt(attr[2]));
                    person.setWeight(Integer.parseInt(attr[4]));
                    person.setHeight(Float.parseFloat(attr[3]));
                    if(attr[5] == "MAN")
                        person.setSex(Human.Sex.MAN);
                    else
                        person.setSex(Human.Sex.WOMAN);
                    model.addElement(person);
                }
                i++;
            }
        } catch (Exception e) {
            System.err.println("Chyba při čtení ze souboru.");
        }
    }//GEN-LAST:event_openFileMenuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Window().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ChoiceBox;
    private javax.swing.JPopupMenu PopupMenu;
    private javax.swing.JButton addButton;
    private javax.swing.JMenuItem editMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JMenuItem openFileMenu;
    private javax.swing.JList<String> peopleList;
    private javax.swing.JMenuItem removeAllMenuItem;
    private javax.swing.JMenuItem removeMenuItem;
    private javax.swing.JMenuItem saveFileMenu;
    // End of variables declaration//GEN-END:variables
}
